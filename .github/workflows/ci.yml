name: CI

on:
  schedule:
    - cron: "0 2 2 * *"
  workflow_dispatch:

jobs:
  build_and_push:
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            docker-platform: linux/amd64
          - runner: ubuntu-22.04-arm
            docker-platform: linux/arm64
        target:
          - tag: x86_64-musl
            args: TARGET=x86_64-unknown-linux-musl
#          - tag: aarch64-musl
#            args: |
#              TARGET=aarch64-unknown-linux-musl
#              RUST_MUSL_MAKE_CONFIG=config.aarch64.mak
#          - tag: armv7-musleabihf
#            args: TARGET=armv7-unknown-linux-musleabihf
#          - tag: armv7-musleabi
#            args: TARGET=armv7-unknown-linux-musleabi
#          - tag: arm-musleabi
#            args: TARGET=arm-unknown-linux-musleabi
#          - tag: arm-musleabihf
#            args: TARGET=arm-unknown-linux-musleabihf
#          - tag: i686-musl
#            args: TARGET=i686-unknown-linux-musl
#          - tag: i586-musl
#            args: TARGET=i586-unknown-linux-musl

    name: Build & push ${{ matrix.platform.docker-platform }}:${{ matrix.target.tag }}
    runs-on: ${{ matrix.platform.runner }}

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          provenance: false
          sbom: false
          platforms: ${{ matrix.platform.docker-platform }}
          tags: |
            somespecialone/rust-musl-cross-gcc
            ghcr.io/somespecialone/rust-musl-cross-gcc
          build-args: ${{ matrix.target.args }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: echo ${{ matrix.target.tag }}=${{ steps.build.outputs.digest }} > ${{ runner.temp }}/digest.txt

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digest-${{ strategy.job-index }}
          path: ${{ runner.temp }}/digest.txt
          if-no-files-found: error
          retention-days: 1

  merge_and_push:
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest
    needs: build_and_push
    name: Merge and push manifest lists

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all digests
        uses: actions/download-artifact@v5
        with:
          path: digests
          pattern: digest-*

      - name: Group digests by tag
        run: |
          # Aggregate into one file
          cat digests/*/digest.txt > digests.txt

          # Group by tag into JSON {tag: [digests]}
          jq -Rn '
            [inputs | split("=")] 
            | group_by(.[0]) 
            | map({key: .[0][0], value: map(.[1])}) 
            | from_entries
          ' digests.txt > grouped.json

      - name: Create manifest lists and push to Docker Hub
        run: |
          # Create multi-platform manifests
          for tag in $(jq -r 'keys[]' grouped.json); do
            digests=$(jq -r --arg t "$tag" '.[$t][]' grouped.json)

            # Build command dynamically
            cmd="docker buildx imagetools create -t somespecialone/rust-musl-cross-gcc:$tag"

            for digest in $digests; do
              cmd="$cmd somespecialone/rust-musl-cross-gcc@$digest"
            done

            eval "$cmd"
          done

      - name: Create manifest lists and push to GitHub Container Registry
        run: |
          # Create multi-platform manifests
          for tag in $(jq -r 'keys[]' grouped.json); do
            digests=$(jq -r --arg t "$tag" '.[$t][]' grouped.json)

            # Build command dynamically
            cmd="docker buildx imagetools create -t ghcr.io/somespecialone/rust-musl-cross-gcc:$tag"

            for digest in $digests; do
              cmd="$cmd ghcr.io/somespecialone/rust-musl-cross-gcc@$digest"
            done

            eval "$cmd"
          done
